[project]
name = "mastodon-follower-export"
dynamic = ["version"]
description = "Export a list of your Mastodon followers"
readme = "README.md"
license = "MPL-2.0"
authors = [
    { name = "thcrt", email = "110127860+thcrt@users.noreply.github.com" },
]
requires-python = ">=3.13"

dependencies = [
    "mastodon-py>=2.1.3",
    "pyside6>=6.9.2",
    "validators>=0.35.0",
]
[dependency-groups]
dev = ["pyright>=1.1.405"]


[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/mastodon_follower_export/_version.py"
build.packages = ["src/mastodon_follower_export"]


[tool.pyright]
include = ["src/mastodon_follower_export"]
strict = ["**/*"]
ignore = ["**/_version.py"]
deprecateTypingAliases = true
enableReachabilityAnalysis = true
reportCallInDefaultInitializer = "warning"
reportImplicitOverride = "error"
reportImplicitStringConcatenation = "error"
reportImportCycles = "warning"
reportPropertyTypeMismatch = "warning"
reportUninitializedInstanceVariable = "warning"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnreachable = "error"

[tool.ruff]
line-length = 100
exclude = ["_version.py"]
lint.pydocstyle.convention = "google"
lint.select = [
    "ERA",   # eradicate
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "C4",    # flake8-comprehensions
    "EM",    # flake8-errmsg
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "LOG",   # flake8-logging
    "G",     # flake8-logging-format
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SIM",   # flake8-simplify
    "SLOT",  # flake8-slots
    "TID",   # flake8-tidy-imports
    "TC",    # flake8-type-checking
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "FLY",   # flynt
    "I",     # isort
    "C90",   # mccabe
    "N",     # pep8-naming
    "PERF",  # perflint
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "D",     # pydocstyle
    "F",     # pyflakes
    "PL",    # pylint
    "UP",    # pyupgrade
    "FURB",  # refurb
    "RUF",   # ruff
    "TRY",   # tryceratops
]
lint.ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "TRY400",
]
